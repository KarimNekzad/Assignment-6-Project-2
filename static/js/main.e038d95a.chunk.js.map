{"version":3,"sources":["InfoCard.jsx","CitySearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["CityCard","className","this","props","zip","Component","CitySearch","state","city","zips","zipInfo","onChangeHandler","bind","link","axios","get","then","response","console","log","setState","data","setTimeout","catch","err","prevProps","prevStates","fetchZip","e","target","value","toUpperCase","type","name","placeholder","onChange","map","index","InfoCard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAYeA,E,uKARX,OACE,qBAAKC,UAAU,gBAAf,SACE,uCAAUC,KAAKC,MAAMC,a,GAJNC,aC6ERC,E,kDAzEb,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXC,KAAM,GACNC,KAAM,GACNC,QAAS,IAGX,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBARN,E,uDAWP,IAAD,OACLC,EAAO,0CAA4CX,KAAKK,MAAMC,KAClEM,IACGC,IAAIF,GACJG,MAAK,SAACC,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEX,KAAMQ,EAASI,OAC/BC,YAAW,WACTJ,QAAQC,IAAI,QAAS,EAAKZ,MAAME,QAI/B,QAEJc,OAAM,SAACC,GACNN,QAAQC,IAAIK,Q,kFAeOC,EAAWC,G,iEAE9BA,EAAWlB,OAASN,KAAKK,MAAMC,MACjCN,KAAKyB,W,+IAIOC,GACd,IAAIpB,EAAOoB,EAAEC,OAAOC,MACpBZ,QAAQC,IAAI,QAASX,EAAKuB,eAC1B7B,KAAKkB,SAAS,CAAEZ,KAAMA,EAAKuB,kB,+BAGnB,IAAD,OAEP,OADAb,QAAQC,IAAI,UAEV,gCACE,yCACA,uBACEa,KAAK,OACLC,KAAK,OACLC,YAAY,WACZC,SAAU,SAACP,GAAD,OAAO,EAAKjB,gBAAgBiB,MAEvC1B,KAAKK,MAAME,KAAK2B,KAAI,SAAChC,EAAKiC,GACzB,OAAO,cAACC,EAAD,CAAUlC,IAAKA,GAAUiC,a,GAnEjBhC,aCYVkC,MAbf,WACE,OACE,sBAAKtC,UAAU,MAAf,UACE,iDAEE,kFAGF,cAAC,EAAD,QCASuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e038d95a.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass CityCard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"zip-container\">\r\n        <h4>ZIP: {this.props.zip}</h4>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CityCard\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport InfoCard from \"./InfoCard\"\r\n\r\nclass CitySearch extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      city: \"\",\r\n      zips: [],\r\n      zipInfo: [],\r\n    }\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this)\r\n  }\r\n\r\n  fetchZip() {\r\n    let link = \"https://ctp-zip-api.herokuapp.com/city/\" + this.state.city\r\n    axios\r\n      .get(link)\r\n      .then((response) => {\r\n        console.log(response)\r\n        this.setState({ zips: response.data })\r\n        setTimeout(() => {\r\n          console.log(\"zips:\", this.state.zips)\r\n          // for (let i = 0; i < this.state.zips.length; i++) {\r\n          //   this.fetchZipInfo(this.state.zips[i])\r\n          // }\r\n        }, 400)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  // fetchZipInfo(zip) {\r\n  //   let link = \"http://ctp-zip-api.herokuapp.com/zip/\" + zip\r\n  //   axios.get(link).then((response) => {\r\n  //     this.setState({ zipInfo: response.data })\r\n  //   })\r\n\r\n  //   setTimeout(() => {\r\n  //     console.log(\"zipInfo[0]:\", this.state.zipInfo[0])\r\n  //   }, 600)\r\n  // }\r\n\r\n  async componentDidUpdate(prevProps, prevStates) {\r\n    // prevent infinite API call\r\n    if (prevStates.city !== this.state.city) {\r\n      this.fetchZip()\r\n    }\r\n  }\r\n\r\n  onChangeHandler(e) {\r\n    let city = e.target.value\r\n    console.log(\"City:\", city.toUpperCase())\r\n    this.setState({ city: city.toUpperCase() })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"RENDER\")\r\n    return (\r\n      <div>\r\n        <label>City</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"city\"\r\n          placeholder=\"e.g. NYC\"\r\n          onChange={(e) => this.onChangeHandler(e)}\r\n        />\r\n        {this.state.zips.map((zip, index) => {\r\n          return <InfoCard zip={zip} key={index} />\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CitySearch\r\n","import \"./App.css\"\n\nimport CitySearch from \"./CitySearch\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        City Search\n        <p>By: Yifeng Zheng, Mohamed Shafee, Karim Nekzad</p>\n      </header>\n\n      <CitySearch />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}